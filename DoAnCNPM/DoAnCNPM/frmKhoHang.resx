<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQSSURBVEhL7VZdTFtlGK6JRi/mMpcsbtELo3g3443ebG6J
        2SQDZzSRRbddYOKFmmA0wT8Uh4gdPxv/pVD6M0aVv40alsFAGB1xjqVMIBsMRKTr6SmtK9CW1dJzYH38
        vtOPbuvpD+jNLvYkT873837Pc973nO98R/EA9z3c7tDjlKwrw1zX5o3e7qdTfH3b1N7ebTlseP2w24PP
        83wwj+cDozzvDfC8gDC9AZttaYTMHeG4pRQWroBZ8fB839Y0YgzKv81bNrCptcFq9W8lpjqr1bN8xyw2
        wzHBepfr1pN0bagr5dH/lDHHiS8TQWe0ASW5GVhnFmXjjLM2m/gSk1H8UNr3lPJYz3bWTQy7XXjRbv/H
        Fy06Me6EMa8EdW8dhCH9bWg//hKWC6P3xIQZ8HKc8ALVKi7u3l9Y3J0tCScCLdWNGwK3KkKz6//ZjNr3
        s6DdlQr9rtegTN+PgowMqF/dB+OOVKjfyUS7qiFSBYdDgNMp8rOzoS1MNjmIkZ4uvjpsgyorG7V738DJ
        HXtRvO91aHO/grnXBMtvv2DEYibtdrSqjqM84wDqdu6BZncqKg69h4s9l7GwsExuIqhhsolB3tBned4j
        To67ULInDQaSYdXhw2iqKcX5zjaMWi5gWZzH7RWPRFGYw+TVQVwaOIvO9gaosz6CLu1NNL6SCpPaSIw9
        otO59AyTjw+6LWi201MLKP8kG7ryQkxcG4TbNR0xO91xCgWtbRJL62sj48KSG6NDZvSfOw3lhx9g4MyA
        VHai+Q2Tjw+eX7KEgwUMDlgwNHAuIrzKxvZmfNrVK/F7bb1sXgi6YaxRM1PJeJDJx8f09C3/6oLLvw5j
        fPiiTNizwGFm5ppEp2NKNk/ZqjNEjOnuYPKxQT+Bq8HRxp1tJ3Gm2ZCQLbpq+H0OmTFlos+rYm4utNHv
        v43FxRWZcU1RHk6ojqG/p126xmJZfg5c/OT6jSncbl/g5k0xrvHdPNVYh462E5F+POOkpYY58zHXn5cm
        HXa/zFhbpkSLoSYh1SX5cTJO8nIt/35QRQjfdb3MuFr5LbTlR8OsKISpqf5On/H4kc9jGjscwS+YRWyI
        V97NocaOMdNKtLG6+Ds0aspgatGjSV8ttaNZqcyFi5uIMvYIa/qAYCRzE1lQFm1cVZALTakS+soiUvaj
        UjuaJbmfyTImh00Jk04OjgttJov+GrZcR0NVKTqaGlCR/zWMdRUJqSrMI1tKLcWbfmymxlNWKzYx2bWB
        HGnbYx2La2fAO//HT+nk0dUzybWD/sqQUo3HFk7EwBg5bJ7D2IEN4tChnUxufbDZ8AQRq6SnjNwgmlJM
        +brLezcAPFRU1JNJr7RPsyf7MeHPHs1SWvx/oNFceYQYV9ErG7oHyX5vH+A+gULxL8EmsV5qT1iaAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>